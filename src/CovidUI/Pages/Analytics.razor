@page "/analytics"
@using System.Threading
@using CovidUI.Responses
@using Syncfusion.Blazor.DropDowns
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime jsRuntime

<h3>Get Historical Data</h3>

<p>Current Country:<strong>@DropVal</strong></p>

<SfDropDownList TValue="string" Placeholder="e.g. Australia" TItem="Countries" Value="@DropVal" DataSource="@Country">
    <DropDownListEvents TValue="string" ValueChange="onChange"></DropDownListEvents>
    <DropDownListFieldSettings Value="Name"></DropDownListFieldSettings>
</SfDropDownList>

<button class="btn btn-primary" @onclick="Redirect"> Check @DropVal's Historical Data</button>
@code {
    #region Drop Down
    List<CountryData> CountryData;
    List<Countries> Country;
    public class Countries
    {
        public string Name { get; set; }

        public string Code { get; set; }
    }

    public string DropVal;

    protected override async Task OnInitializedAsync()
    {
        CountryData = new List<CountryData>();
        Country = new List<Countries>();
        await GetCountriesWithData();
        Thread.Sleep(1000);
    }

    private void onChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        DropVal = args.Value;
        StateHasChanged();
    }

    private async Task GetCountriesWithData()
    {
        var countryInfoUrl = "http://54.76.66.207:80/api/Country/countries";
        var response = await Http.GetAsync(countryInfoUrl);
        var responseContent = await response.Content.ReadAsStringAsync();

        CountryData = System.Text.Json.JsonSerializer.Deserialize<List<CountryData>>(responseContent); //TODO
        Console.WriteLine($"Counties: {CountryData.Count}");

        await CreateDropDownItems();
    }

    private async Task CreateDropDownItems()
    {
        foreach (var country in CountryData)
        {
            Country.Add(new Countries
            {
                Name = country.CountryName,
                Code = country.CountryCode
            });
        }
        Console.WriteLine($"Counties: {Country.Count}");
    }
    #endregion

    public void Redirect()
    {
        var country = Country.FirstOrDefault(x => x.Name == DropVal);
        Navigate(country.Code.ToUpper());
    }
    void Navigate(string countrycode)
    {
        var uri = $"/historic?countryCode={countrycode}";
        Thread.Sleep(300);
        jsRuntime.InvokeAsync<object>("open", uri+"", "_blank");
        StateHasChanged();
    }
}